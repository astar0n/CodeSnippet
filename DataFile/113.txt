goals. language is no longer a semiotic system of signs representing obiects, but a network of social games embedded in
cultural forms of life. the second point that frieder makes is that the interpretant, one of the elements of the
sign, is itself a sign: "it is this recursiveness of the concept that makes it irreducible and maximal," for frieder,
apparently, the sign s definition in terms of an infinite regress of signs links semiotics to software and postmodernity, but
peirce noted that the recursion of symbolic interpretants bottoms out at some point in "habits" of the human interpreter. with
habits, one leaves the explicit realm of symbolic expression and reaches its roots in tacit knowledge. some distinctions according to
heidegger, all explicit knowledge derives its meaningfulness from a network of significance that makes up the interpretive (hermeneutic) situation. this
significance is based on tacit knowledge that comes from our lived experience as historical embodied beings living in the physical
and social world (see also merleau-ponty, who explicated this view}. so semiotics deals with a level of knowledge that is
not irreducible, but is based on a non-symbolic level of experiential meaning. marx provides a more specific analysis of human
existence in the world with his concept of labor as human activity transforming nature. two of his distinctions are useful
for analyzing the sign nature of software. marx distinguishes intellectual labor from manual labor. we can take this as the
separation of symbolic from physical processes. marx shows how this increasing separation is an historical development arising from capital accumulation
the symbolic distinction is produced by material social reality. managerial functions are separated from material production, assigned to different people,
departments, or even countries. this raises the possibility that the "information society" may not represent a post-capitalist form of production,
but merely the further separation of intellectual labor in the first world from manual labor in the third world. marx
s second distinction is between live labor and dead labor. dead labor is the productive capability of artifacts in which
past labor is now congealed. machines are marx s prime example of dead labor. machines have a productive capability based
on two conditions: ta} they encapsulate past human labor and (b) they magnify the effects of current live labor. capital
is dead labor. as the theoretician of the industrial age, marx focused on dead manual labor as the basis for
machinery. today we might extend this approach to a concept of dead intellectual labor as the basis for the meaningfulness
of symbolic artifacts: signs as dead intellectual labor. an analysis of signs as dead symbolic activity could account for the
recursive nature of signs as well as for the bottoming out of this recursion in live human activity in the
physical, social world. it could also tie communicative signs to social activity and culture, since culture is the paradigmatic agglomeration
of dead intellectual labor at a social level. software as machinery let us apply these distinctions to software. a program
represents the intellectual labor that went in to designing it (to accomplish some human goal), writing it {to define an
algorithm that is humanly meaningful), and debugging it {to ensure that it produces humanly useful output}. like a piece of
machinery enclosed in a black box, a software artifact in an executable file may persist long after the labor that
went into it is forgotten and the artifact may reveal little about the intentions of that past labor. however, when
the artifact is put to use by new live labor it performs in ways determined by its congealed dead labor.
consider a piece of software that you are creating with your live intellectual labor right now. you are making use
of software libraries, compilers, assemblers, operating systems, utilities, etc. that are the result of countless hours of intellectual labor virtually
the result of the entire history of software, you also make use of concepts like variable, recursion, class that incorporate
models of thought whose cultural history can scarcely be comprehended. to all this you add your meager contribution, expecting that
since you are just manipulating bits arbitrary signs you should encounter no inertial resistance. if one considers the amount of
dead intellectual labor incorporated in a software artifact (and in the design of its hardware substrate), it is incredible that
it works and allows the live labor of programmers or end-users to accomplish their own specific human goals. clearly, this
enormous symbolic machine only works because {a} a considerable amount of the labor that went into it was devoted to
making it simplified, standardized, and reliable and {b} much social effort went into developing compatible practices of live software labor
through socialization and training. rather than adopting a postmodern, allegedly post-capitalist ideology in which being digital is divorced from pushing
atoms, we might view software as the biggest machine yet produced for increasing intellectual productivity and maximizing capital accumulation. is
it a coincidence that today s wealthiest robber baron both statewide and nationally. her mother was a graduate of wellesley
college and had blue blood coursing through her veins. sarah lacked for nothing, from comfort and money to the finest
education and friends that money could buy. it was a perfect life, an american dream come true; that is, until
her senior year in high school, when her 15-year-old brother greg announced that he was gay. "my dream suddenly turned
into a nightmare," sarah recalls. "my parents simply couldn t deal with it. most of my friends deserted me, like
i had done something wrong. but worse than that, everyone abandoned greg, as if he had leprosy." sarah was the
only one who stood by her little brother, gently persuading her parents over the next year that homosexuality was not
a disease or a curse, and easing him back into the family. she became his guardian, his mentor, his best
friend. when sarah graduated and left home to attend amherst college for a degree in iournalism, she made greg promise
to stay in greenwich and finish his last two years of high school. sarah would drive home every other
